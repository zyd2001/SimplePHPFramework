#!/usr/bin/env php
<?php

function copyr($source, $dest)
{   
    // Simple copy for a file
    if (is_file($source)) 
    {
        return copy($source, $dest);
    }

    // Make destination directory
    if (!is_dir($dest)) 
    {
        mkdir($dest);
    }

    // Loop through the folder
    $dir = scandir($source);
    foreach ($dir as $entry) 
    {
        // Skip pointers
        if ($entry == '.' || $entry == '..') 
        {
            continue;
        }

        // Deep copy directories
        copyr("$source/$entry", "$dest/$entry");
    }
    return true;
}

if (!isset($argv[1]))
    $argv[1] = '.';
if ($argv[1] === '-h' || $argv[1] === '--help')
{
    exit("Usage: " . $argv[0] . " [path]");
}
copyr(__DIR__ . '/structure', $argv[1]);
copy($argv[1] . '/.env.example', $argv[1] . '/.env');

// add autoload to composer.json
$composer = <<<JSON
{
    "name": "zyd/project",
    "type": "project",
    "require": {
        "zyd/simple-php-framework" :"^0.1.0"
    },
    "autoload": {
        "psr-4" : {
            "App\\\" : "App/"
        }
    }
}
JSON;
$filename = $argv[1] . '/composer.json';
if (file_exists($filename))
{
    $json = json_decode(file_get_contents($filename));
    if (property_exists($json, "autoload"))
    {
        if (property_exists($json->autoload, "psr-4"))
        {
            $name1 = "psr-4";
            $name2 = "App\\";
            $json->autoload->$name1->$name2 = "App/";
        }
    }
    else 
    {
        $json->autoload = json_decode('"psr-4" : {
            "App\\" : "App/"
        }');
    }
    file_put_contents($filename, json_encode($json, JSON_UNESCAPED_SLASHES));
}
else
{
    // if no composer.json, created default one
    echo "You don't have composer.json file in the current directory. Created one.\n";
    file_put_contents($filename, $composer);
}